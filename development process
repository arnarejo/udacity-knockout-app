Step 1
  - create index.html file
  - link with custom style file style.css and custom js file main.js
  - Link with knockout and jquery frameworks
  - a separate location.js file and mapstyle.js file is linked with index.html

step 2
  - create a #map div in index.html file
  - Provide google Maps API code snippet to access Maps API, get maps api key (not mandatory but improves usage limit)
  - use initMap() function in map.js, create map variable inside it and set up an instance of google.Map class
  - make sure #map div in index.html have height property. Also set height property for html, body elements

Step 3
  - create viewMap() function and link it with Knockout framework
  - create a Location function which takes data as input and returns a list of objects

Step 4
 - make sure knockout.js works fine by linking initialLocations list with the index.html. Using knockout data binding 'forEach' function display each location in view
 - in the viewModel() create an observable array customList() and map all the locations in initialLocations to customList()

Step 5
 - In the index.html file provide an input box for user to filter the locations and make user input as knockout observable to filter the locations list
 - in the input element set the user value to searchTerm

Step 6
 - in the Location function create a knockout variable 'visible' and set its default value to true. This will ensure all locations are visible by default
